# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: INFO
        io.github.jhipster: INFO
        com.threedsoft.${spring.application.name}: DEBUG

spring:
    profiles:
        active: prodgcp
        include:
            - swagger
            - zipkin
            # Uncomment to activate TLS for the prod profile
            #- tls
    prodtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use Webpack prod server + BrowserSync for livereload
    jackson:
        serialization:
            indent-output: true
    cloud:
        stream:
            kafka:
                binder:
                    brokers: ${KAFKA_HOST}
                    headers: spanId,spanSampled,spanProcessId,spanParentSpanId,spanTraceId,spanName,spanFlags,eventName,appname
            bindings:
                customer-orders-in:
                    destination: customer-orders-in-prod
                customer-orders-out:
                    destination: customer-orders-out-prod
                orders-in:
                    destination: orders-in-prod
                orders-out:
                    destination: orders-out-prod
                inventory-in:
                    destination: inventory-in-prod
                inventory-out:
                    destination: inventory-out-prod
                cubing-in:
                    destination: cubing-in-prod
                cubing-out:
                    destination: cubing-out-prod
                pick-in:
                    destination: pick-in-prod
                pick-out:
                    destination: pick-out-prod
                pack-in:
                    destination: pack-in-prod
                pack-out:
                    destination: pack-out-prod
                sort-in:
                    destination: sort-in-prod
                sort-out:
                    destination: sort-out-prod
                shipment-in:
                    destination: shipment-in-prod
                shipment-out:
                    destination: shipment-out-prod
                shipengine-in:
                    destination: shipengine-in-prod
                shipengine-out:
                    destination: shipengine-out-prod
                print-in:
                    destination: print-in-prod
                print-out:
                    destination: print-out-prod
                workflow-in:
                    destination: workflow-in-prod
                workflow-out:
                    destination: workflow-out-prod
        config:
            fail-fast: false
            bus:
                enabled: true
                destination: springCloudBusOutput
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PWD}
        hikari:
            auto-commit: false
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
        database: POSTGRESQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.connection.provider_disables_autocommit: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: ${spring.application.name}
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
            hibernate.jdbc.lob.non_contextual_creation: true

    liquibase:
        contexts: prod
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-duration: PT1S # 1 second, see the ISO 8601 standard
    thymeleaf:
        cache: false
    sleuth:
        sampler:
            probability: 1.0 # report 100% of traces
            percentage: 1.0
    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
        base-url: http://localhost:9411
        service:
          name: customerorder

server:
    port: ${SERVER_PORT}

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need to activate TLS (see application-tls.yml)
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
                enabled: false
                update-interval: 3
                url: http://localhost:8180/mancenter
    # CORS is disabled by default on microservices, as you should access them through a gateway.
    # If you want to enable it, please uncomment the configuration below.
    # cors:
        # allowed-origins: "*"
        # allowed-methods: "*"
        # allowed-headers: "*"
        # exposed-headers: "Authorization,Link,X-Total-Count"
        # allow-credentials: true
        # max-age: 1800
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: ${spring.application.name}@localhost
        base-url: http://127.0.0.1:6787
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx:
            enabled: true
        prometheus:
            enabled: false #expose metrics via prometheus
        logs: # Reports Dropwizard metrics in the logs
            enabled: true
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: true
            host: localhost
            port: 5000
            queue-size: 512

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
#redis connections
redis:
    host=${REDIS_HOST}
    port=${REDIS_PORT}

# WMS Welcome Msg
wms:
    service:
        ready:
            msg: "Service is ready"
        health:
            msg: "Service is healthy"
            
shipengine:
    url: https://api.shipengine.com/v1/labels
    api-key: k3LXdQHLLOo3FVi91x9Iqj9GUZevB2VIubzByn8ZZ+I    

threedsoft:
  wms:
    orderplannerhost: ${ORDERPLANNER_SERVICE_URL}
    pickhost: ${PICK_SERVICE_URL}
    packhost: ${PACK_SERVICE_URL}
